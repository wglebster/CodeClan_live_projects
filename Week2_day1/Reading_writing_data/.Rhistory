library(readr)
write_csv(students, "example/students.csv")
library(readr)
write_csv("example/students.csv")
library(readr)
#write_csv("example/students.csv")
seedmix <- read_xlsx("2_excel_files/data/edinburgh_seedmix.xlsx", sheet=4)
library(readr)
#write_csv("example/students.csv")
seedmix <- read_xlsx("2_excel_files/data/edinburgh_seedmix.xlsx", sheet=4)
library(readxl)
#write_csv("example/students.csv")
seedmix <- read_xl  ("2_excel_files/data/edinburgh_seedmix.xlsx", sheet=4)
seedmix <- read_xlsx("2_excel_files/data/edinburgh_seedmix.xlsx", sheet=4)
seedmix <- read_xlsx("2_excel_files/data/edinburgh_seedmix.xlsx", sheet=4)
seedmix
write.xlsx(students, file = "students.xlsx", colNames = TRUE, borders = "columns")
library(readr)
library(readr)
dog_bites <- read_csv("data/dog_bites.csv")
#there is a function read.csv(), but read_csv is better
head(dog_bites)
summary(dog_bites)
bands <- read_tsv("data/indie_bands.txt")
head(bands)
beer <- read_delim("data/beer.txt", delim = ";", n_max = 10)
beer_limited <- read_delim("data/beer.txt", delim = ";", n_max = 2)#specified number of rows to load with n_max
head(beer)
beer_limited
max_temp <- read_table("data/maxtemp.txt")
head(max_temp)
#View(max_temp)
play_areas <- read_csv("data/play_areas.csv", skip = 3)
head(play_areas)
tv <- read_tsv("data/tv.txt", col_names = c("1", "2", "3", "4"))
head(tv)
weekly_sst <- read_table("https://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for",
skip = 4,
col_names = c("Nino1+2",	"Nino3",	"Nino34"))
head(weekly_sst)
surnames <- read_lines("data/surnames.txt")
length(surnames)
library(CodeClanData)
library(readxl)
#write_csv("example/students.csv")
seedmix <- read_xlsx("2_excel_files/data/edinburgh_seedmix.xlsx", sheet=4)
seedmix
write.xlsx(students, file = "students.xlsx", colNames = TRUE, borders = "columns")
install.packages("openxlsx")
library(openxlsx)
write.xlsx(students, file = "students.xlsx", colNames = TRUE, borders = "columns")
students <- read_xlsx("students.xlsx")
students <- read_xlsx("students.xlsx")
students
library(jsonlite)
library(jsonlite)
library(readr)
raw_colours <- read_file("3_json_files/data/colours.json")
raw_colours
#library pacman allows to load mutiple libraries in a single statement
install.packages("pacman")
library(jsonlite)
library(readr)
prettify(raw_colours)
colours <- parse_json(raw_colours)
colours <- parse_json(raw_colours)
colours
colours <- parse_json(raw_colours)
colours
colours[[1]]
colours[[1]]
colours[[2]]
colours[[3]]
colours[1]
class(colours[1])
colours2 <- fromJSON(raw_colours)
colours2
read_example <- read_file("3_json_files/data/example.json")
read_example <- read_file("3_json_files/data/example.json")
prettify(read_example)
read_example1 <- parse_json(read_example)
read_example1
read_example <- read_file("3_json_files/data/example.json")
prettify(read_example)
read_example1 <- parse_json(read_example)
#read_example1
read_example <- read_file("3_json_files/data/example.json")
prettify(read_example)
read_example1 <- parse_json(read_example)
#read_example1
read_example1 <- fromJSON(read_example)
read_example <- read_file("3_json_files/data/example.json")
prettify(read_example)
read_example1 <- parse_json(read_example)
read_example1 <- fromJSON(read_example)
read_example1
read_example <- read_file("3_json_files/data/example.json")
prettify(read_example)
read_example1 <- parse_json(read_example)
read_example1 <- fromJSON(read_example1)
read_example <- read_file("3_json_files/data/example.json")
prettify(read_example)
read_example1 <- parse_json(read_example)
read_example2 <- fromJSON(read_example1)
library(tidyverse)
library(tidyverse)
unnest(colours2$code)
colour_list
write_json(colour_list, "colours2.json")
write_json(colour_list, "colours2.json", pretty = TRUE, auto_unbox = TRUE)
read_example <- read_file("3_json_files/data/example.json")
prettify(read_example)
read_example1 <- parse_json(read_example)
read_example2 <- fromJSON(read_example)
read_example2
read_example <- read_file("3_json_files/data/example.json")
prettify(read_example)
read_example1 <- parse_json(read_example)
read_example2 <- fromJSON(read_example1)
library(readr)
library(readr)
local
library(readr)
local()
library(readr)
locale()
#can be used to change encoding
locale(encoding = "Latin1")
p_n_p <- read_file("4_parsing_data/data/pride_and_prejudice_utf_16.txt", locale = locale("UTF-16"))
p_n_p <- read_file("4_parsing_data/data/pride_and_prejudice_utf_16.txt", locale = locale(UTF-16))
p_n_p <- read_file("4_parsing_data/data/pride_and_prejudice_utf_16.txt", locale = locale(encoding = "UTF-16"))
p_n_p
p_n_p <- read_file("4_parsing_data/data/pride_and_prejudice_utf_16.txt", locale = locale(encoding = "UTF-8"))
p_n_p
p_n_p <- read_file("4_parsing_data/data/pride_and_prejudice_utf_16.txt", locale = locale(encoding = "UTF-16"))
p_n_p
p_n_p <- read_file("4_parsing_data/data/pride_and_prejudice_utf_16.txt")
p_n_p
p_n_p_default<- read_file("4_parsing_data/data/pride_and_prejudice_utf_16.txt")
p_n_p_default
p_n_p_default <- read_file("4_parsing_data/data/pride_and_prejudice_utf_16.txt")
p_n_p_default
p_n_p_utf16 <- read_file("4_parsing_data/data/pride_and_prejudice_utf_16.txt", locale = locale(encoding = "UTF-16"))
p_n_p_utf16
p_n_p_default <- read_file("4_parsing_data/data/pride_and_prejudice_utf_16.txt")
p_n_p_default
p_n_p_utf16 <- read_file("4_parsing_data/data/pride_and_prejudice_utf_16.txt", locale = locale(encoding = "UTF-16"))
p_n_p_utf16
rm(p_n_p)
p_n_p_default <- read_file("4_parsing_data/data/pride_and_prejudice_utf_16.txt")
p_n_p_default
p_n_p_utf16 <- read_file("4_parsing_data/data/pride_and_prejudice_utf_16.txt", locale = locale(encoding = "UTF-16"))
p_n_p_utf16
cake <- read_delim("4_parsing_data/data/cake_european.csv", delim = ";")
cake
cake_decimal <- (cake, locale = locale(decimal_mark = ","))
cake_decimal <- ("4_parsing_data/data/cake_european.csv" , locale = locale(decimal_mark = ","))
cake_decimal <- ("4_parsing_data/data/cake_european.csv", locale = locale(decimal_mark = ","))
cake_decimal <- ("4_parsing_data/data/cake_european.csv", locale = locale(decimal_mark = ","))
cake_decimal <- read_delim("4_parsing_data/data/cake_european.csv", delim = ";")
cake_decimal <- (cake, locale = locale(decimal_mark = ","))
cake_decimal <- read_delim("4_parsing_data/data/cake_european.csv", delim = ";", locale = locale(decimal_mark = ","))
#cake_decimal <- (cake, )
cake_decimal
cake_decimal <- read_delim("4_parsing_data/data/cake_european.csv", delim = ";", locale = locale(decimal_mark = ",", date_format = "%d/%m/%Y"))
#cake_decimal <- (cake, )
cake_decimal
