print("10 is less than 15")
}
if (5 %in% c(1,4,8)) {
print("5 is in (1,4,8)")
}
x <- 8
y <- 7
if (x > y) {
print("x is greater than y")
}
x <- 4
if (x %% 2 ==0) {
print(x " is an even number")
x <- 4
if (x %% 2 ==0) {
print(as.character(x)" is an even number")
x <- 4
if (x %% 2 ==0) {
print("It is an even number")
}
x <- 5
if (x %% 2 ==0) {
print("It is an even number")
}
x <- 2
if (x %% 2 ==0) {
print("It is an even number")
}
x <- 3
if (x %% 2 ==0) {
print("It is an even number") else
x <- 3
if (x %% 2 ==0) {
print("It is an even number")
}
if (10 != 5){
if (3 > 1){
print("Hello")
}
print("Goodby")
}
if (10 != 5){
if (2 <= 0){
print("Hello")
}
print("Goodby")
}
x <- 10
y <- 3
if (x > y) {
print("Start of outer if block")
if (x %% y ==0) {
print("Inner if block 1")
if(y % in% c(1:5)) {
print("Inner if block 2")
}
print("End of outer if block")
}
print("Aftrer if statement")
}
x <- 10
y <- 2
if (x > y) {
print("Start of outer if block")
if (x %% y ==0) {
print("Inner if block 1")
if(y % in% c(1:5)) {
print("Inner if block 2")
}
print("End of outer if block")
}
print("Aftrer if statement")
}
x <- 10
y <- 2
if (x > y) {
print("Start of outer if block")
if (x %% y ==0) {
print("Inner if block 1")
if(y %in% c(1:5)) {
print("Inner if block 2")
}
print("End of outer if block")
}
print("Aftrer if statement")
}
x <- 10
y <- 3
if (x > y) {
print("Start of outer if block")
if (x %% y ==0) {
print("Inner if block 1")
if(y %in% c(1:5)) {
print("Inner if block 2")
}
print("End of outer if block")
}
print("Aftrer if statement")
}
x <- 2
y <- 10
if (x > y) {
print("Start of outer if block")
if (x %% y ==0) {
print("Inner if block 1")
if(y %in% c(1:5)) {
print("Inner if block 2")
}
print("End of outer if block")
}
print("Aftrer if statement")
}
x <- 10
y <- 3
if (x > y) {
print("Start of outer if block")
if (x %% y ==0) {
print("Inner if block 1")
if(y %in% c(1:5)) {
print("Inner if block 2")
}
print("End of outer if block")
}
print("Aftrer if statement")
}
x <- 10
y <- 3
if (x > y) {
print("Start of outer if block")
if (x %% y ==0) {
print("Inner if block 1")
if(y %in% c(1:5)) {
print("Inner if block 2")
}
print("End of outer if block")
}
print("Aftrer if statement")
}
x <- 10
y <- 2
if (x > y) {
print("Start of outer if block")
if (x %% y ==0) {
print("Inner if block 1")
if(y %in% c(1:5)) {
print("Inner if block 2")
}
print("End of outer if block")
}
print("Aftrer if statement")
}
if (4 < 5) {
print("Yes")
} else {
print("No")
}
if (5 < 4) {
print("Yes")
} else {
print("No")
}
if (5 < 4) {print("Yes")} else {print("No")}
x <- 3
if (x %% 2 ==0) {
print("It is an even number")
} else {
print("It is an odd number")
}
x <- 10
if (x %% 2 ==0) {
print("It is an even number")
} else {
print("It is an odd number")
}
if (5 < 4) {
print("Yes")
} else {
print("No")
}
ifelse(1:10 <= 5, "less or equal to 5", "greater than 5")
ifelse(vec <- c(1:10) <= 5, "less or equal to 5", "greater than 5")
ifelse(vec <- c(1:10) <= 5, [vec]"less or equal to 5", "greater than 5")
ifelse(vec <- c(1:10) <= 5, "less or equal to 5", "greater than 5")
rm(vec)
vec <-c(1:10)
ifelse(vec <= 5, [vec]"less or equal to 5", "greater than 5")
vec <-c(1:10)
ifelse(vec <= 5, [vec]"less or equal to 5", "greater than 5")
vec <-c(1:10)
ifelse(vec <= 5, [vec]"less or equal to 5", "greater than 5")
rm(vec)
ifelse(vec <= 5, [vec]"less or equal to 5", "greater than 5")
ifelse(1:10 <= 5, [vec]"less or equal to 5", "greater than 5")
ifelse(1:10 <= 5, "less or equal to 5", "greater than 5")
ifelse(1:10 %% 2 == 0, "Even", "Odd")
chars <- c("Cat", "Monkey")
ifelse(animals == "Monky", "Monkey", animals)
chars <- c("Cat", "Monkey")
ifelse(chars == "Monky", "Monkey", animals)
chars <- c("Cat", "Monkey")
ifelse(chars == "Monky", "Monkey", chars)
ifelse(x %% 3 == 0, "Multiple of 3", "Not a multiple of 3")
ifelse(x %% 3 == 0, "Multiple of 3", "Not a multiple of 3")
ifelse(x == "Sum", prunt("Sun"), x)
ifelse(x %% 3 == 0, "Multiple of 3", "Not a multiple of 3")
x1 <- "Sum"
ifelse(x1 == "Sum", prunt("Sun"), x)
ifelse(x %% 3 == 0, "Multiple of 3", "Not a multiple of 3")
x1 <- "Sum"
ifelse(x1 == "Sum", print("Sun"), x)
x1 <- "Sum"
ifelse(x %% 3 == 0, "Multiple of 3", "Not a multiple of 3")
ifelse(x1 == "Sum", print("Sun"), x)
x1 <- "Sum"
ifelse(x %% 3 == 0, "Multiple of 3", "Not a multiple of 3")
ifelse(x1 == "Sum", print("Sun"), x1)
ifelse(x %% 3 == 0, "Multiple of 3", "Not a multiple of 3")
ifelse(x1 == "Sum", print("Sun"), x1)
ifelse(x %% 3 == 0, "Multiple of 3", "Not a multiple of 3")
ifelse(x1 == "Sum", print("Sun"), x1)
ifelse(x %% 3 == 0, "Multiple of 3", "Not a multiple of 3")
ifelse(x1 == "Sum", print("Sun"), x1)
ifelse(x %% 3 == 0, "Multiple of 3", "Not a multiple of 3")
ifelse(x1 == "Sum", "Sun", x1)
library(dplyr)
x <- 1:20
x <- 1:20
case_when(
x %% 2 == 0 ~ "Even",
x %% 2 == 0 ~ "Divisible by 3",
x %% 5 == 0 ~ "Divisible by 5",
TRUE ~ "Other Number"
)
animals <- c("Cat", "Dog", "Monkey", "Elephant", "Dog")
animals <- c("Cat", "Dog", "Monkey", "Elephant", "Dog", "Snail")
case_when(
animals == "Cat" ~ 4,
animals == "Dog" ~ 2,
animals == "Monkey" ~ 3,
animals == "Elephant" ~ 6,
)
x <- 1:20
case_when(
x %% 2 == 0 ~ "Even",
x %% 2 == 0 ~ "Divisible by 3",
x %% 5 == 0 ~ "Divisible by 5",
TRUE ~ x
)
x <- 1:20
case_when(
x %% 2 == 0 ~ "Even",
x %% 2 == 0 ~ "Divisible by 3",
x %% 5 == 0 ~ "Divisible by 5",
TRUE ~ as.character(x)
)
fizzbuzz <- 1:100
fizzbuzz <- 1:100
case_when(
fizzbuzz %% 3 == 0 ~ "Fizz",
fizzbuzz %% 5 == 0 ~ "Buzz",
fizzbuzz %% 3 ==0 & fizzbuzz %% 5 ==0 ~ "FizzBuzz"
TRUE ~ as.character(fizzbuzz)
fizzbuzz <- 1:100
case_when(
fizzbuzz %% 3 == 0 ~ "Fizz",
fizzbuzz %% 5 == 0 ~ "Buzz",
fizzbuzz %% 3 ==0 && fizzbuzz %% 5 ==0 ~ "FizzBuzz"
TRUE ~ as.character(fizzbuzz)
fizzbuzz <- 1:100
case_when(
fizzbuzz %% 3 == 0 ~ "Fizz",
fizzbuzz %% 5 == 0 ~ "Buzz",
fizzbuzz %% 3 ==0 && fizzbuzz %% 5 ==0 ~ "FizzBuzz",
TRUE ~ as.character(fizzbuzz)
)
fizzbuzz <- 1:100
case_when(
fizzbuzz %% 3 == 0 ~ "Fizz",
fizzbuzz %% 5 == 0 ~ "Buzz",
fizzbuzz %% 3 ==0 & fizzbuzz %% 5 ==0 ~ "FizzBuzz",
TRUE ~ as.character(fizzbuzz)
)
fizzbuzz <- 1:100
case_when(
fizzbuzz %% 3 == 0 ~ "Fizz",
fizzbuzz %% 5 == 0 ~ "Buzz",
fizzbuzz %% 3 ==0 && fizzbuzz %% 5 ==0 ~ "FizzBuzz",
TRUE ~ as.character(fizzbuzz)
)
fizzbuzz <- 1:100
case_when(
fizzbuzz %% 3 ==0 & fizzbuzz %% 5 ==0 ~ "FizzBuzz",
fizzbuzz %% 3 == 0 ~ "Fizz",
fizzbuzz %% 5 == 0 ~ "Buzz",
TRUE ~ as.character(fizzbuzz)
)
fizzbuzz <- 1:100
case_when(
fizzbuzz %% 3 == 0 & fizzbuzz %% 5 ==0 ~ "FizzBuzz",
fizzbuzz %% 3 == 0 ~ "Fizz",
fizzbuzz %% 5 == 0 ~ "Buzz",
TRUE ~ as.character(fizzbuzz)
)
x <- as.factor( c("green", "blue", "blue", "red", "purple"))
x <- as.factor(c("green", "blue", "blue", "red", "purple"))
ifelse(x == "green", "blue", x)
recode(x, "green" = "blue")
x <- as.factor(c("green", "blue", "blue", "red", "purple"))
ifelse(x == "green", "blue", recode(x, "green" = "blue"))
x <- as.factor(c("green", "blue", "blue", "red", "purple"))
ifelse(x == "green", "blue", x)
recode(x, "green" = "blue")
name <- c("John", "Clara", "Smith")
sex <- c(1, 2, 1)
age <- c(30, 32, 54)
# create a new dataframe
student_df <- data.frame(name, sex, age)
student_df
name <- c("John", "Clara", "Smith")
sex <- c(1, 2, 1)
age <- c(30, 32, 54)
# create a new dataframe
student_df <- data.frame(name, sex, age)
student_df
recode(student_df$sex, 1 = "Male")
name <- c("John", "Clara", "Smith")
sex <- c(1, 2, 1)
age <- c(30, 32, 54)
# create a new dataframe
student_df <- data.frame(name, sex, age)
student_df
ifelse(student_df$sex == 1, "male", "female")
#recode(student_df$sex, 1 = "Male")
name <- c("John", "Clara", "Smith")
sex <- c(1, 2, 1)
age <- c(30, 32, 54)
# create a new dataframe
student_df <- data.frame(name, sex, age)
student_df
ifelse(student_df$sex == 1, "male", "female")
recode(student_df$sex, 1 = "male", )
name <- c("John", "Clara", "Smith")
sex <- c(1, 2, 1)
age <- c(30, 32, 54)
# create a new dataframe
student_df <- data.frame(name, sex, age)
student_df
ifelse(student_df$sex == 1, "male", "female")
recode(student_df$sex, 1 == "male", )
name <- c("John", "Clara", "Smith")
sex <- c(1, 2, 1)
age <- c(30, 32, 54)
# create a new dataframe
student_df <- data.frame(name, sex, age)
student_df
recode(student_df$sex, 1 == "male", )
name <- c("John", "Clara", "Smith")
sex <- c(1, 2, 1)
age <- c(30, 32, 54)
# create a new dataframe
student_df <- data.frame(name, sex, age)
student_df
recode(student_df$sex, 1 == "male", 2 == "female" )
name <- c("John", "Clara", "Smith")
sex <- c(1, 2, 1)
age <- c(30, 32, 54)
# create a new dataframe
student_df <- data.frame(name, sex, age)
student_df
recode(sex, "1" = "male", "2" = "female" )
name <- c("John", "Clara", "Smith")
sex <- c(1, 2, 1)
age <- c(30, 32, 54)
# create a new dataframe
student_df <- data.frame(name, sex, age)
student_df$sex
student_df$sex<-recode(sex, "1" = "male", "2" = "female" )
student_df
name <- c("John", "Clara", "Smith")
sex <- c(1, 2, 1)
age <- c(30, 32, 54)
# create a new dataframe
student_df <- data.frame(name, sex, age)
student_df
student_df$sex<-recode(sex, "1" = "male", "2" = "female" )
student_df
x <- 1:10
recode(x, "2" = 20L, "4" = 40L)
mean_annual <- rowMeans(temp_data)
#get beer data
beer_data <- CodeClanData::beer
head(beer_data, 2)
beer_data[order(beer_data$percent, decreasing = TRUE), ]
mean(beer_data$percent)
median(beer_data$percent)
#get temp data
temp_data <- CodeClanData::temp
years <- (1910:2015)
rownames(temp_data) <- years
annual_temp <- t(temp_data)
annual_temp
mean_monthly <- colMeans(temp_data)
mean_monthly
mean_annual <- rowMeans(temp_data)
mean_annual
coldest_temp_year <- list("The lowest average temperature of ", min(mean_annual), "degrees C was recorded in", years[min(mean_annual)])
paste(coldest_temp_year, collapse = " ")
warmest_temp_year <- list("The warmest average temperature of ", max(mean_annual), "degrees C was recorded in", years[max(mean_annual)])
paste(round(warmest_temp_year, collapse = " "), digits = 2)
mean_annual <- rowMeans(temp_data)
mean_annual
coldest_temp_year <- list("The lowest average temperature of ", min(mean_annual), "degrees C was recorded in", years[min(mean_annual)])
paste(coldest_temp_year, collapse = " ")
warmest_temp_year <- list("The warmest average temperature of ", max(mean_annual), "degrees C was recorded in", years[max(mean_annual)])
paste(round(warmest_temp_year, digits = 2), collapse = " ")
mean_annual <- rowMeans(temp_data)
mean_annual
coldest_temp_year <- list("The lowest average temperature of ", min(mean_annual), "degrees C was recorded in", years[min(mean_annual)])
paste(coldest_temp_year, collapse = " ")
warmest_temp_year <- list("The warmest average temperature of ", max(mean_annual), "degrees C was recorded in", years[max(mean_annual)])
as.character(paste(round(warmest_temp_year, digits = 2), collapse = " "))
mean_annual <- rowMeans(temp_data)
mean_annual
coldest_temp_year <- list("The lowest average temperature of ", min(mean_annual), "degrees C was recorded in", years[min(mean_annual)])
paste(coldest_temp_year, collapse = " ")
warmest_temp_year <- list("The warmest average temperature of ", max(mean_annual), "degrees C was recorded in", years[max(mean_annual)])
paste(warmest_temp_year, collapse = " ")
mean_annual <- rowMeans(temp_data)
round(mean_annual, digits = 2)
coldest_temp_year <- list("The lowest average temperature of ", min(mean_annual), "degrees C was recorded in", years[min(mean_annual)])
paste(coldest_temp_year, collapse = " ")
warmest_temp_year <- list("The warmest average temperature of ", max(mean_annual), "degrees C was recorded in", years[max(mean_annual)])
paste(warmest_temp_year, collapse = " ")
mean_annual <- rowMeans(temp_data)
round(mean_annual, digits = 2)
coldest_temp_year <- list("The lowest average temperature of ", round(min(mean_annual), digits = 2) , "degrees C was recorded in", years[min(mean_annual)])
paste(coldest_temp_year, collapse = " ")
warmest_temp_year <- list("The warmest average temperature of ", max(mean_annual), "degrees C was recorded in", years[max(mean_annual)])
paste(warmest_temp_year, collapse = " ")
mean_annual <- rowMeans(temp_data)
round(mean_annual, digits = 2)
coldest_temp_year <- list("The lowest average temperature of ", round(min(mean_annual), digits = 2) , "degrees C was recorded in", years[min(mean_annual)])
paste(coldest_temp_year, collapse = " ")
warmest_temp_year <- list("The warmest average temperature of ", round(max(mean_annual), digits = 2) , "degrees C was recorded in", years[max(mean_annual)])
paste(warmest_temp_year, collapse = " ")
weekdays <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
weekdays <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
for (day in weekdays) {
phrase <- paste("The day is", day)
print(phrase)
}
nums <- 1:5
nums <- 1:5
for (num in nums) {
print(num)
}
nums <- 1:5
for (num in nums) {
pr <- paste0("paste(", num,")")
print(num)
}
nums <- 1:5
for (num in nums) {
pr <- paste("paste(", num,")")
print(num)
}
nums <- 1:5
for (num in nums) {
pr <- paste("paste(", num,")")
print(pr)
}
nums <- 1:5
for (num in nums) {
pr <- paste0("paste(", num,")")
print(pr)
}
curr_val <- 1
stop_val <- 10
while(curr_val < stop_val) {
curr_val <- curr_val + 1
print(curr_val)
}
?exp
my_vector <- c(1,2,3,4,5)
my_matrix <- matrix(data = 1:10, nrow = 5, ncol = 6)
matrix
my_matrix <- matrix(data = (1:10), nrow = 5, ncol = 6)
matrix
if(expression){
do_code_if_true
} else {
do_code_if_false
}
my_matrix <- matrix(data = (1:10), nrow = 5, ncol = 6)
my_matrix <- matrix(data = (1:10), nrow = 5, ncol = 6)
matrix
View(my_matrix)
my_matrix <- matrix(data = 1:10, nrow = 5, ncol = 6)
my_matrix
my_matrix <- matrix(data = 1:10, nrow = 5, ncol = 6)
my_matrix
sum_rows_matrix <- apply(my_matrix)
?apply
my_matrix <- matrix(data = 1:10, nrow = 5, ncol = 6)
my_matrix
sum_rows_matrix <- apply(my_matrix, 2)
my_matrix <- matrix(data = 1:10, nrow = 5, ncol = 6)
my_matrix
sum_rows_matrix <- apply(my_matrix, 2)
my_matrix <- matrix(data = 1:10, nrow = 5, ncol = 6)
my_matrix
sum_rows_matrix <- apply(2, my_matrix)
